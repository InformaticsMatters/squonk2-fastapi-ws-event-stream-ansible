---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ess
  namespace: {{ ess_namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: ess
  template:
    metadata:
      name: ess
      labels:
        name: ess
    spec:
{% if ess_priority_class %}
      priorityClassName: {{ ess_priority_class }}
{% endif %}
      serviceAccountName: account-server
      terminationGracePeriodSeconds: {{ ess_api_termination_grace_period_seconds }}

      # Avoid 'worker' nodes
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 20
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists
          - weight: 10
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose-core
                operator: Exists

      containers:
      - name: ess
        image: {{ ess_image_owner }}/squonk2-fastapi-ws-event-stream:{{ ess_image_tag }}
{% if ess_image_tag in ['latest', 'stable'] or ess_pull_policy_always %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - /home/as/pre-stop-hook.sh
        ports:
        - containerPort: 8080
          name: ws
        - containerPort: 8081
          name: internal
        volumeMounts:
        - mountPath: /data
          name: database
        - mountPath: /logs
          name: logs
        env:
        - name: ESS_AMPQ_URL
          value: '{{ ess_ampq_url }}'
        - name: ESS_INGRESS_LOCATION
          value: '{{ ess_ws_hostname }}'
        - name: ESS_INGRESS_SECURE
{% if ess_cert_issuer %}
          value: 'yes'
{% else %}
          value: 'no'
{% endif %}
        - name: ESS_MESSAGE_STATS_INTERVAL
          value: '{{ ess_message_stats_interval }}'
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying containers. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
        startupProbe:
          tcpSocket:
            port: 8081
          failureThreshold: 60
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: {{ ess_api_cpu_request }}
            memory: {{ ess_api_mem_request }}
{% if ess_api_cpu_limit or ess_api_mem_limit %}
          limits:
{% if ess_api_cpu_limit %}
            cpu: {{ ess_api_cpu_limit }}
{% endif %}
{% if ess_api_mem_limit %}
            memory: {{ ess_api_mem_limit }}
{% endif %}
{% endif %}

      - name: memcached
        image: memcached:{{ ess_memcached_tag }}
        imagePullPolicy: IfNotPresent
        args:
        - '-v'
        - '--memory-limit={{ ess_memcached_memory_limit_mb }}'
        ports:
        - containerPort: 11211
          name: memcached
        resources:
          requests:
            cpu: {{ ess_memcached_cpu_request }}
            memory: {{ ess_memcached_mem_request }}
{% if ess_memcached_cpu_limit or ess_memcached_mem_limit %}
          limits:
{% if ess_memcached_cpu_limit %}
            cpu: {{ ess_memcached_cpu_limit }}
{% endif %}
{% if ess_memcached_mem_limit %}
            memory: {{ ess_memcached_mem_limit }}
{% endif %}
{% endif %}

      volumes:
      - name: database
        persistentVolumeClaim:
          claimName: ess-database
      - name: logs
        persistentVolumeClaim:
          claimName: ess-log
